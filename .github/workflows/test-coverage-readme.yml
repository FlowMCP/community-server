name: Run Tests with Coverage and Update README

on:
  push:
    branches:
      - main
# optional sinnvoll: auch PRs pr√ºfen
# on:
#   push:
#   pull_request:

permissions:
  contents: write
  id-token: write   # << n√∂tig f√ºr OIDC

jobs:
  test-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Create test environment file
        run: |
          echo "# Test Environment Variables for CI/CD" > .community.env
          echo "SERVER_URL=http://localhost" >> .community.env
          echo "SERVER_PORT=8080" >> .community.env
          echo "WEBHOOK_SECRET=test-webhook-secret-123" >> .community.env
          echo "WEBHOOK_PORT=3001" >> .community.env
          echo "PM2_NAME=test-community-server" >> .community.env
          echo "BEARER_TOKEN_EERC20=test-eerc20-token" >> .community.env
          echo "BEARER_TOKEN_INSEIGHT=test-inseight-token" >> .community.env
          echo "AUTH0_DOMAIN=test-domain.auth0.com" >> .community.env
          echo "AUTH0_CLIENT_ID=test-auth0-client-id" >> .community.env
          echo "ACCOUNT_DEVELOPMENT2_PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12" >> .community.env
          echo "ACCOUNT_DEVELOPMENT2_PUBLIC_KEY=0x742d35Cc6634C0532925a3b8D6aC6782d3B5C123" >> .community.env
          echo "BASE_SEPOLIA_ALCHEMY_HTTP=https://base-sepolia.g.alchemy.com/v2/test-api-key-12345" >> .community.env
          echo "TEST_VARIABLE=test-value" >> .community.env
          echo "ANOTHER_TEST=another-value" >> .community.env

      - name: Run Jest tests (with coverage)
        run: npm run test:coverage:src
        env:
          NODE_OPTIONS: '--experimental-vm-modules'

      - name: Upload coverage to Codecov (OIDC)
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          files: ./coverage/lcov.info      # Jest legt diese Datei standardm√§√üig an
          fail_ci_if_error: true
          flags: unittests
        # optional: auch hochladen, wenn Tests fehlschlagen
        # if: ${{ always() }}

      - name: Generate README
        run: node ./.github/workflows/generate-readme/index.mjs

      - name: Commit and Push README Changes
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.email "${{ secrets.USER_EMAIL }}"
          git config user.name "a6b8"
          git add .
          if ! git diff --cached --exit-code; then
            git commit -m "Update README with latest schema changes ü§ñ"
            git push
          else
            echo "No README changes to commit"
          fi